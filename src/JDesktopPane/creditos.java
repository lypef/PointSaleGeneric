/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JDesktopPane;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lypef
 */
public class creditos extends javax.swing.JInternalFrame {

    /**
     * Creates new form creditos
     */
    public creditos() {
        initComponents();
        LoadClientes();
        LoadCreditos(0);
    }

    private void LoadClientes() 
    {
        JcomboBoxClientes.removeAllItems();
        try {
                Clases.ConexionBD Coneccion = new Clases.ConexionBD();
                String sql = "SELECT * FROM clientes ORDER by Nombre asc";
                ResultSet rs = Coneccion.Consulta(sql);
                
                DefaultComboBoxModel model = new DefaultComboBoxModel();
                model.addElement(new Items(0, "TODOS"));
                while (rs.next())
                {
                    model.addElement(new Items(rs.getInt(1), rs.getString(2) + " " + rs.getString(3)));
                }
                JcomboBoxClientes.setModel(model);
                
            } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
                Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
    public void LoadCreditos(int cliente) {
            try {
                Clases.ConexionBD Coneccion = new Clases.ConexionBD();
                double total = 0.0;
                
                String sql;
                
                if (cliente == 0)
                {
                    sql = "SELECT cre.id, cli.Nombre, cre.producto, cre.monto, cre.fechapago FROM creditos cre, clientes cli WHERE cre.cliente_id = cli.id ORDER by cre.id DESC";
                }else
                {
                    sql = "SELECT cre.id, cli.Nombre, cre.producto, cre.monto, cre.fechapago FROM creditos cre, clientes cli WHERE cre.cliente_id = cli.id and cre.cliente_id = '"+ cliente +"' ORDER by cre.id DESC";
                }
                
                ResultSet rs = Coneccion.Consulta(sql);
                DefaultTableModel DefaultTableModel = new DefaultTableModel(){
                    public boolean isCellEditable(int rowIndex,int columnIndex){return false;}
                };
                
                String ValoresTabla [] = {"Id","Cliente","Producto","Monto","Fecha de pago"};
                DefaultTableModel.setColumnIdentifiers(ValoresTabla);
                Tabla.setModel(DefaultTableModel);
                Tabla.getColumnModel().getColumn(0).setPreferredWidth(20);
                Tabla.getColumnModel().getColumn(1).setPreferredWidth(200);
                Tabla.getColumnModel().getColumn(2).setPreferredWidth(470);
                Tabla.getColumnModel().getColumn(3).setPreferredWidth(130);
                Tabla.getColumnModel().getColumn(4).setPreferredWidth(150);
                
                String valores [] = new String [5];
                while (rs.next())
                {
                    valores [0] = rs.getString(1);
                    valores [1] = rs.getString(2);
                    valores [2] = rs.getString(3);
                    valores [3] = rs.getString(4);
                    valores [4] = rs.getString(5);
                    total += Double.parseDouble(rs.getString(4));
                    DefaultTableModel.addRow(valores);
                }
                LblTotal.setText(String.valueOf(total));
            } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
                Logger.getLogger(Sales.class.getName()).log(Level.SEVERE, null, ex);
            }
            
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        JcomboBoxClientes = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        LblTotal = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(942, 561));

        Tabla.setFont(Tabla.getFont());
        jScrollPane1.setViewportView(Tabla);

        JcomboBoxClientes.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        JcomboBoxClientes.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                JcomboBoxClientesItemStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 0));
        jLabel8.setText("CLIENTE");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Dollar.png"))); // NOI18N
        jButton2.setText("COBRAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jLabel9.setText("ADEUDO TOTAL$ :");

        LblTotal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        LblTotal.setForeground(new java.awt.Color(255, 0, 0));
        LblTotal.setText("0.000000000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(JcomboBoxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 351, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel8)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(6, 6, 6)
                .addComponent(LblTotal)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel8)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(JcomboBoxClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton2))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(LblTotal)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JcomboBoxClientesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_JcomboBoxClientesItemStateChanged
        LoadCreditos(((Items) JcomboBoxClientes.getSelectedItem()).getId());
    }//GEN-LAST:event_JcomboBoxClientesItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Cobrar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void Cobrar ()
    {
        try {
                Clases.ConexionBD coneccion = new Clases.ConexionBD();
                
                if (((Items) JcomboBoxClientes.getSelectedItem()).getId() != 0)
                {
                    String concepto = "PAGO ADEUDO, CLIENTE: " + JcomboBoxClientes.getSelectedItem();
                    String addlog = "INSERT INTO `logs`(`producto`,`codigo`, `precio`, `piezas`, `hora` , `fecha`) VALUES ('"+ concepto +"' ,'S/N','"+ Double.parseDouble(LblTotal.getText()) +"', 1, '"+ Hora() +"' , '"+ fecha() +"')";
                    String delete = "DELETE from creditos WHERE cliente_id = '"+ ((Items) JcomboBoxClientes.getSelectedItem()).getId() +"' ";
                    coneccion.ejecutar(addlog);
                    coneccion.ejecutar(delete);
                    LoadCreditos(((Items) JcomboBoxClientes.getSelectedItem()).getId());
                }else
                {
                    String concepto = "TODOS LOS CREDITOS AN SIDO PAGADOS.";
                    String addlog = "INSERT INTO `logs`(`producto`,`codigo`, `precio`, `piezas`, `hora` , `fecha`) VALUES ('"+ concepto +"' ,'S/N','"+ Double.parseDouble(LblTotal.getText()) +"', 1, '"+ Hora() +"' , '"+ fecha() +"')";
                    String delete = "DELETE from creditos";
                    coneccion.ejecutar(addlog);
                    coneccion.ejecutar(delete);
                    LoadCreditos(((Items) JcomboBoxClientes.getSelectedItem()).getId());
                }
            
                
                JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Hecho.");
            } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
                JOptionPane.showInternalMessageDialog(Desktop.Escritorio,ex);
            }
    }
    private String fecha()
    {
        Calendar fecha = new GregorianCalendar ();
        int a = fecha.get(Calendar.MONTH);
        int b = a+1;
        
        String dia = Integer.toString(fecha.get(Calendar.DATE));
        String mes = Integer.toString(b);
        String año = Integer.toString(fecha.get(Calendar.YEAR));
        
        return año + "-" +mes +"-"+ dia;
    }
    
    private String Hora ()
    {
        Calendar fecha = new GregorianCalendar ();
        
        String hora = Integer.toString(fecha.get(Calendar.HOUR));
        String minutos = Integer.toString(fecha.get(Calendar.MINUTE));
        String segundos = Integer.toString(fecha.get(Calendar.SECOND));
        
       return hora + ":" + minutos + ":" + segundos; 
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JcomboBoxClientes;
    private javax.swing.JLabel LblTotal;
    private javax.swing.JTable Tabla;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
    public class Items {

        public Items(int id, String texto) {
            this.id = id;
            this.texto = texto;
        }

        public int getId() {
            return id;
        }

        public void setId(int id) {
            this.id = id;
        }

        public String getTexto() {
            return texto;
        }

        public void setTexto(String texto) {
            this.texto = texto;
        }
        int id;
        String texto;

        @Override
        public String toString() {
            return getTexto();
        }

    }
    
}
