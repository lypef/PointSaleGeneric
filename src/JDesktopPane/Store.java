/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package JDesktopPane;

import Clases.ConexionBD;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.awt.print.PrinterException;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lypef_000
 */
public class Store extends javax.swing.JInternalFrame {

    /**
     * Creates new form Store
     */
    DefaultTableModel table = new DefaultTableModel ();
    String NivelDeUsuario , UsuarioDeTrabajador;
    Clases.ReturnDate datos = new Clases.ReturnDate();
    
    public Store() {
        initComponents();
        this.setTitle("STOCK - " + datos.ReturnDateMay("nombre"));
        Muestra();      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        Imprimir = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        BtnUpdate = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        TextModelo = new javax.swing.JTextField();
        ButonSearch = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        Tabla.setFont(Tabla.getFont().deriveFont(Tabla.getFont().getSize()+2f));
        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Tabla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TablaKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(Tabla);

        Imprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Print.png"))); // NOI18N
        Imprimir.setText("Imprimir");
        Imprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImprimirActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Exit-Exit.png"))); // NOI18N
        jButton4.setText("Salir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Edit.png"))); // NOI18N
        jButton1.setText("Editar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        BtnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Refresh.png"))); // NOI18N
        BtnUpdate.setText("Actualizar");
        BtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnUpdateActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Add.png"))); // NOI18N
        jButton2.setText("Agregar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Clean.png"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        TextModelo.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        TextModelo.setText("// MODELO");
        TextModelo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TextModeloMouseClicked(evt);
            }
        });
        TextModelo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextModeloActionPerformed(evt);
            }
        });
        TextModelo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextModeloKeyPressed(evt);
            }
        });

        ButonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Search.png"))); // NOI18N
        ButonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButonSearchActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Exit.png"))); // NOI18N
        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(543, 543, 543)
                        .addComponent(TextModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1008, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Imprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(BtnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(TextModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Imprimir)
                        .addComponent(jButton3)
                        .addComponent(jButton1)
                        .addComponent(jButton2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BtnUpdate)
                        .addComponent(jButton4)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImprimirActionPerformed
     if (NivelDeUsuario.equalsIgnoreCase("vendedor"))
        {
        JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Acceso negado");
        }else
        {
        Print();            
        }

    }//GEN-LAST:event_ImprimirActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        dispose ();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if (NivelDeUsuario.equalsIgnoreCase("vendedor"))
        {
        JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Acceso negado");
        }else
        {
        int x = Tabla.getSelectedRow();
        if (x == -1)
        {
        JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Seleccione articulo a editar");
        }else
        {
        CallEditar (x);
        }
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnUpdateActionPerformed
        TextModelo.setText("// MODELO");
        Muestra ();
    }//GEN-LAST:event_BtnUpdateActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        addproduct addproduct = new addproduct();
        Desktop.Escritorio.add(addproduct);
        addproduct.setLocation(Desktop.Escritorio.getWidth() / 2 - addproduct.getWidth() / 2 , Desktop.Escritorio.getHeight() / 2 - addproduct.getHeight() / 2);
        addproduct.show();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        TextModelo.setText("// MODELO");
        Muestra();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void ButonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButonSearchActionPerformed
        if (!TextModelo.getText().equalsIgnoreCase("// MODELO"))
        {
            SearchModel();
        }else
        {
            JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Ingrese valores para filtrar");
           
        }
    }//GEN-LAST:event_ButonSearchActionPerformed

    private void TextModeloKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextModeloKeyPressed
        if (evt.getKeyCode()== KeyEvent.VK_ENTER)
        { 
            ButonSearch.doClick();
        }
    }//GEN-LAST:event_TextModeloKeyPressed

    private void TextModeloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextModeloMouseClicked
        TextModelo.setText("");
    }//GEN-LAST:event_TextModeloMouseClicked

    private void TablaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaKeyPressed

    }//GEN-LAST:event_TablaKeyPressed

    private void TextModeloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextModeloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextModeloActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    if (NivelDeUsuario.equalsIgnoreCase("vendedor"))
        {
        JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Acceso negado");
        }else
        {
        CallDelete();            
        }

    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnUpdate;
    private javax.swing.JButton ButonSearch;
    private javax.swing.JButton Imprimir;
    private javax.swing.JTable Tabla;
    private javax.swing.JTextField TextModelo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton8;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
    private void CallEditar (int x)
    {
        EditStore EditStore = new EditStore ();
        Desktop.Escritorio.add(EditStore);
        EditStore.setLocation(Desktop.Escritorio.getWidth() / 2 - EditStore.getWidth() / 2 ,Desktop.Escritorio.getHeight() / 2 - EditStore.getHeight() / 2);
        EditStore.toFront();
        EditStore.FuncionEditarRoot((String)Tabla.getValueAt(x, 0),(String)Tabla.getValueAt(x, 1),(String)Tabla.getValueAt(x, 2),(String)Tabla.getValueAt(x, 3),
                (String)Tabla.getValueAt(x, 4),(String)Tabla.getValueAt(x, 5));
        EditStore.show();

    }
    private void Muestra () 
    {
        try {
            Clases.ConexionBD ConexionBD = new Clases.ConexionBD();
            DefaultTableModel DefaultTableModel = new DefaultTableModel(){
            public boolean isCellEditable(int rowIndex,int columnIndex){return false;} 
            };
       
            String ValoresTabla [] = {"Id","Producto","Descripcion","Codigo de barra","Precio","Stock"};
            DefaultTableModel.setColumnIdentifiers(ValoresTabla);
            Tabla.setModel(DefaultTableModel);
            Tabla.getColumnModel().getColumn(0).setPreferredWidth(1);
            Tabla.getColumnModel().getColumn(1).setPreferredWidth(250);
            Tabla.getColumnModel().getColumn(2).setPreferredWidth(400);
            Tabla.getTableHeader().setReorderingAllowed(false);
            String sql = "select * from productos";
            ResultSet rs = ConexionBD.Consulta(sql);
            
            String valores [] = new String [6];
            
            while (rs.next()){
            valores [0] = rs.getString(1);
            valores [1] = rs.getString(2);
            valores [2] = rs.getString(3); 
            valores [3] = rs.getString(4);
            valores [4] = rs.getString(5);
            valores [5] = rs.getString(6);            
            DefaultTableModel.addRow(valores);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Store.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Store.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Store.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Store.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }  
    
    private void Print() 
    {
        try {
            MessageFormat Header = new MessageFormat("LISTADO DE ALMACEN");
            Tabla.print(JTable.PrintMode.FIT_WIDTH, Header, null, false, null, isSelected, null);
        } catch (PrinterException ex) {
            Logger.getLogger(Store.class.getName()).log(Level.SEVERE, null, ex);
        } catch (HeadlessException ex) {
            Logger.getLogger(Store.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Hecho");
    }
    
    private void SearchModel ()
    {
                    try {
            Clases.ConexionBD Coneccion = new Clases.ConexionBD();
            String sql = "select * from calzado";
            ResultSet rs = Coneccion.Consulta(sql);
            DefaultTableModel DefaultTableModel = new DefaultTableModel(){
            public boolean isCellEditable(int rowIndex,int columnIndex){return false;} 
            };
            
            String ValoresTabla [] = {"Id","Producto","Descripcion","Codigo de barra","Precio","Stock"};
            DefaultTableModel.setColumnIdentifiers(ValoresTabla);
            Tabla.setModel(DefaultTableModel);
            String valores [] = new String [6];
            while (rs.next())
            {
            if (rs.getString(4).equalsIgnoreCase(TextModelo.getText()))
            {
                valores [0] = rs.getString(1);
                valores [1] = rs.getString(2);
                valores [2] = rs.getString(3); 
                valores [3] = rs.getString(4);
                valores [4] = rs.getString(5);
                valores [5] = rs.getString(6);
                DefaultTableModel.addRow(valores);
            }
            }
            TextModelo.setText("");
            if (Tabla.getRowCount() == 0)
            {
            Muestra();    
            JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"El modelo no ah sido encontrado");
            TextModelo.setText("");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Store.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Store.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Store.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Store.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

  private void CallDelete() {
    int seleccion = Tabla.getSelectedRow();
    
    if (seleccion == -1)
    {
    JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Seleccione un producto.");
    }else{
        if (JOptionPane.showInternalConfirmDialog(Desktop.Escritorio,"Esta seguro que desea eliminar el producto : " + (String) Tabla.getValueAt(seleccion,1),"¿Esta seguro?", 0) == 0){
        try {
            Clases.ConexionBD coneccion = new Clases.ConexionBD();
            String sql = "delete from productos where id = '"+Integer.parseInt((String) Tabla.getValueAt(seleccion,0))+"'";
            coneccion.ejecutar(sql);
            BtnUpdate.doClick();
        } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
            JOptionPane.showInternalMessageDialog(Desktop.Escritorio, "Error, el producto no se elimino.");
        }
        }
        
    }
    }
  
}
