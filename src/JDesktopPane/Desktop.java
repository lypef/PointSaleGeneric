/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package JDesktopPane;

import Clases.functions;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author www.cyberchoapas.com
 */
public class Desktop extends javax.swing.JFrame {

    /**
     * Creates new form Desktop
     */
    String NivelDeUsuario,UsuarioDeTrabajador;
    String footer = "", footer_familias = "";
    
    Clases.ReturnDate datos = new Clases.ReturnDate();
    functions f = new functions();
    
    public Desktop() {
            initComponents();
            setTitle(datos.ReturnDateMay("nombre"));
            setLocationRelativeTo(null);
            //setAlwaysOnTop(true);
            this.setResizable(false);
            
            setExtendedState(MAXIMIZED_BOTH);
            Desktop.setDefaultLookAndFeelDecorated(true);
            JDialog.setDefaultLookAndFeelDecorated(true);
        /*try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Desktop.class.getName()).log(Level.SEVERE, null, ex);
        }*/

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Escritorio = new javax.swing.JDesktopPane();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem9 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem23 = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItem24 = new javax.swing.JMenuItem();
        jMenuItem25 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        Escritorio.setBackground(new java.awt.Color(238, 238, 238));
        Escritorio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout EscritorioLayout = new javax.swing.GroupLayout(Escritorio);
        Escritorio.setLayout(EscritorioLayout);
        EscritorioLayout.setHorizontalGroup(
            EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1466, Short.MAX_VALUE)
        );
        EscritorioLayout.setVerticalGroup(
            EscritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 463, Short.MAX_VALUE)
        );

        jToolBar1.setBackground(new java.awt.Color(229, 42, 42));
        jToolBar1.setBorder(null);
        jToolBar1.setForeground(new java.awt.Color(213, 29, 29));
        jToolBar1.setRollover(true);
        jToolBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Store.png"))); // NOI18N
        jButton1.setText("[F1] STOCK");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton11.setBackground(new java.awt.Color(255, 255, 255));
        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/3209291-32.png"))); // NOI18N
        jButton11.setText("[F2] FAMILIAS");
        jButton11.setFocusable(false);
        jButton11.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton11.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton11);

        jButton10.setBackground(new java.awt.Color(255, 255, 255));
        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Truck32.png"))); // NOI18N
        jButton10.setText("[F3] PROVEDORES");
        jButton10.setFocusable(false);
        jButton10.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton10.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton10);

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Buy.png"))); // NOI18N
        jButton3.setText("[F4] VENTA");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton3);

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Bill.png"))); // NOI18N
        jButton7.setText("[F5] INVENTARIO");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton7);

        jButton8.setBackground(new java.awt.Color(255, 255, 255));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/credit_card.png"))); // NOI18N
        jButton8.setText("[F6] CREDITOS");
        jButton8.setFocusable(false);
        jButton8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton8.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton8);

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Order.png"))); // NOI18N
        jButton6.setText("[F7] RESUMEN");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Clean.png"))); // NOI18N
        jButton5.setText("[F8] LIMPIAR");
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton5);

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Exit-Exit.png"))); // NOI18N
        jButton4.setText("SALIR");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton4);

        jMenuBar2.setBackground(new java.awt.Color(255, 255, 255));
        jMenuBar2.setForeground(new java.awt.Color(255, 255, 255));

        jMenu3.setText("Archivo");
        jMenu3.add(jSeparator2);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem9.setText("Login");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);
        jMenu3.add(jSeparator3);

        jMenuItem10.setText("Salir");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuItem11.setText("Configuracion");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem11);

        jMenuBar2.add(jMenu3);

        jMenu1.setText("Objetos");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem1.setText("Stock");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem22.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F2, 0));
        jMenuItem22.setText("Familias");
        jMenuItem22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem22ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem22);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        jMenuItem3.setText("Provedores");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        jMenuItem6.setText("Ventas");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem16.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jMenuItem16.setText("Creditos");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem16);

        jMenuItem14.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F8, 0));
        jMenuItem14.setText("Limpiar");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem14);
        jMenu1.add(jSeparator1);

        jMenuItem4.setText("Personal");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem15.setText("Clientes");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem15);

        jMenuBar2.add(jMenu1);

        jMenu2.setText("Finanzas");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuItem2.setText("Inventario");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F7, 0));
        jMenuItem5.setText("Resumen");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);
        jMenu2.add(jSeparator4);

        jMenuItem8.setText("Agregar Ingreso");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);

        jMenuItem12.setText("Agregar Egreso");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem12);

        jMenuBar2.add(jMenu2);

        jMenu5.setText("Mantenimiento");

        jMenuItem13.setText("Eliminar todos los clientes");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem13);

        jMenuItem17.setText("Eliminar todos los creditos");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem17);

        jMenuItem18.setText("Eliminar todos los reportes de venta");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem18);

        jMenuItem19.setText("Eliminar todos los productos");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem19);

        jMenuItem20.setText("Eliminar todos los proveedores");
        jMenuItem20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem20ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem20);

        jMenuItem21.setText("Eliminar todos los datos");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem21);

        jMenuBar2.add(jMenu5);

        jMenu6.setText("Caja");

        jMenuItem7.setText("Corte x");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem7);

        jMenuItem23.setText("Corte z");
        jMenuItem23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem23ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem23);
        jMenu6.add(jSeparator5);

        jMenuItem24.setText("Corte x global");
        jMenuItem24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem24ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem24);

        jMenuItem25.setText("Corte z global");
        jMenuItem25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem25ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem25);

        jMenuBar2.add(jMenu6);

        jMenu4.setText("Acerca de");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenu4MousePressed(evt);
            }
        });
        jMenuBar2.add(jMenu4);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Escritorio)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Escritorio))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        CallStore ();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        CallExit();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        CallSales ();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Clean ();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        CallSupplies ();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
    CallSales();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
    CallSupplies();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        AdminStaff();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        CallStore();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        CallConsultas();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        CallInventario();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        CallInventario();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        CallConsultas();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        Clean ();
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        CallConfig();
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        CallExit();
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        CallLogin();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        VaciarTableN("clientes");
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        AddIngreso();
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        AddEgreso();
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        CallClients();
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
      CallCredit();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        CallCredit();
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        VaciarTableN("creditos");
    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
        VaciarTableN("logs");
    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        VaciarTableN("productos");
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem20ActionPerformed
        VaciarTableN("provedores");
    }//GEN-LAST:event_jMenuItem20ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        VaciarTables();
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        CallFamylys();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jMenuItem22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem22ActionPerformed
        CallFamylys();
    }//GEN-LAST:event_jMenuItem22ActionPerformed

    private void jMenu4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MousePressed
        DeveloperInfo();
    }//GEN-LAST:event_jMenu4MousePressed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        JTable t = new JTable();
        f.LogsTable(t, "SELECT v.id, v.producto, v.codigo, v.piezas, v.precio as p_u, (v.precio * v.piezas) as p_total, u.Nombre, f.nombre as familia , v.t_pago, v.fecha FROM logs v, usuarios u, familys f, productos p where v.vendedor = u.Usuario and v.codigo = p.codigo and p.family = f.id and v.cut_z = 0 and v.vendedor = '"+UsuarioDeTrabajador+"' order by f.nombre asc");
        TotalRecaudado(t);
        f.GenerateReporte_pdf_Resumen(t, "Corte x, Usuario: " + UsuarioDeTrabajador, 1, footer, footer_familias);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem24ActionPerformed
        if (NivelDeUsuario.equalsIgnoreCase("root"))
        {
            JTable t = new JTable();
            f.LogsTable(t, "SELECT v.id, v.producto, v.codigo, v.piezas, v.precio as p_u, (v.precio * v.piezas) as p_total, u.Nombre, f.nombre as familia , v.t_pago, v.fecha FROM logs v, usuarios u, familys f, productos p where v.vendedor = u.Usuario and v.codigo = p.codigo and p.family = f.id and v.cut_z_global = 0  order by f.nombre asc");
            TotalRecaudado(t);
            f.GenerateReporte_pdf_Resumen(t, "Corte x global, Genero Usuario: " + UsuarioDeTrabajador, 1, footer, footer_familias);
        }else
        {
            f.Alert("Acceso no permitido", functions.Alert_Error);
        }
    }//GEN-LAST:event_jMenuItem24ActionPerformed

    private void jMenuItem23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem23ActionPerformed
        if (JOptionPane.showConfirmDialog(rootPane,"¿Dejar caja en ceros?","Vaciar caja",0, functions.Alert_Informacion)==0)
        {
            JTable t = new JTable();
            f.LogsTable(t, "SELECT v.id, v.producto, v.codigo, v.piezas, v.precio as p_u, (v.precio * v.piezas) as p_total, u.Nombre, f.nombre as familia , v.t_pago, v.fecha FROM logs v, usuarios u, familys f, productos p where v.vendedor = u.Usuario and v.codigo = p.codigo and p.family = f.id and v.cut_z = 0 and v.vendedor = '"+UsuarioDeTrabajador+"' order by f.nombre asc");
            TotalRecaudado(t);
            f.GenerateReporte_pdf_Resumen(t, "Corte Z, Usuario: " + UsuarioDeTrabajador, 1, footer, footer_familias);
            f.logs_update_cut_x(UsuarioDeTrabajador);
        }
    }//GEN-LAST:event_jMenuItem23ActionPerformed

    private void jMenuItem25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem25ActionPerformed
        if (NivelDeUsuario.equalsIgnoreCase("root"))
        {
            if (JOptionPane.showConfirmDialog(rootPane,"¿Desea vaciar caja global y regresar a ceros?","Vaciar caja global",0, functions.Alert_Warning)==0)
            {
                JTable t = new JTable();
                f.LogsTable(t, "SELECT v.id, v.producto, v.codigo, v.piezas, v.precio as p_u, (v.precio * v.piezas) as p_total, u.Nombre, f.nombre as familia , v.t_pago, v.fecha FROM logs v, usuarios u, familys f, productos p where v.vendedor = u.Usuario and v.codigo = p.codigo and p.family = f.id and v.cut_z_global = 0  order by f.nombre asc");
                TotalRecaudado(t);
                f.GenerateReporte_pdf_Resumen(t, "Corte x global, Genero Usuario: " + UsuarioDeTrabajador, 1, footer, footer_familias);
                f.logs_update_cut_z_global();
            }
        }else
        {
            f.Alert("Acceso no permitido", functions.Alert_Error);
        }
    }//GEN-LAST:event_jMenuItem25ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Desktop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Desktop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JDesktopPane Escritorio;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuItem jMenuItem25;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
public void InsertaNombre (String NivelDeUsuario0 , String UsuarioDeTrabajador0)
{
    NivelDeUsuario = NivelDeUsuario0;
    UsuarioDeTrabajador = UsuarioDeTrabajador0;
}
{

}
    private void Clean ()
    {
        //if (JOptionPane.showConfirmDialog(rootPane,"Esta accion cerrara todas las ventanas abiertas. \n¿Esta seguro que desea continuar?","Confirmacion",0) == 0)
        //{
        Escritorio.removeAll();
        Escritorio.repaint();       
        //}
    }
    public int DesktopEscritorioX (int ventana)
    {
    int x = (Desktop.Escritorio.getWidth() / 2) - ventana / 2 ;
    return x;
    }
    public int DesktopEscritorioy (int ventana)
    {
    int y = (Desktop.Escritorio.getHeight() / 2) - ventana / 2;
    return y;
    }
    
    private void CallClientes ()
    {
        if (NivelDeUsuario.equalsIgnoreCase("vendedor"))
        {
        JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Acceso denegado");
        }else
        {
        Clientes Clientes = new Clientes();
        Clientes.setLocation(DesktopEscritorioX(Clientes.getWidth()), DesktopEscritorioy(Clientes.getHeight()));
        Desktop.Escritorio.add(Clientes);
        Clientes.NivelDeUsuario = NivelDeUsuario;
        Clientes.UsuarioDeTrabajador = UsuarioDeTrabajador;
        Clientes.setLocation(DesktopEscritorioX(Clientes.getWidth()), DesktopEscritorioy(Clientes.getHeight()));
        Clientes.toFront();
        Clientes.show();
        }
    }
    private void CallStore ()
    {
        if (NivelDeUsuario.equalsIgnoreCase("vendedor"))
        {
            addproduct Store = new addproduct();
            Escritorio.add(Store);
            Store.toFront();
            Store.setLocation(DesktopEscritorioX(Store.getWidth()),DesktopEscritorioy(Store.getHeight()));
            Store.show(); 
        }else
        {
            Store Store = new Store();
            Store.NivelDeUsuario = NivelDeUsuario;
            Store.UsuarioDeTrabajador = UsuarioDeTrabajador;
            Escritorio.add(Store);
            Store.toFront();
            Store.setLocation(DesktopEscritorioX(Store.getWidth()),DesktopEscritorioy(Store.getHeight()));
            Store.show();
        }
    }
    private void CallSales ()
    {
            Sales Sales = new Sales ();
            Sales.InsertaNombre(NivelDeUsuario, UsuarioDeTrabajador);
            Escritorio.add(Sales);
            Sales.toFront();
            Sales.setLocation(DesktopEscritorioX(Sales.getWidth()),DesktopEscritorioy(Sales.getHeight()));
            Sales.show();
    }

    private void CallSupplies() 
    {
    if (NivelDeUsuario.equalsIgnoreCase("root"))
        {
            Supplies Supplies = new Supplies ();
            Desktop.Escritorio.add(Supplies);
            Supplies.setLocation(Desktop.Escritorio.getWidth() / 2 -Supplies.getWidth() / 2, Desktop.Escritorio.getHeight() / 2 - Supplies.getHeight() / 2);
            Supplies.toFront();
            Supplies.show();
        }else
        {
            JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Acceso negado");
        }
    }

    private void CallFeatures() {
        if (NivelDeUsuario.equalsIgnoreCase("root"))
        {
            Features Features = new Features ();
            Desktop.Escritorio.add(Features);
            Features.NivelDeUsuario = NivelDeUsuario;
            Features.NombreDeUsuario = UsuarioDeTrabajador;
            Features.setLocation(Desktop.Escritorio.getWidth() / 2 - Features.getWidth() / 2, Desktop.Escritorio.getHeight() / 2 - Features.getHeight() / 2);
            Features.toFront();
            Features.show();
        }else
        {
            JOptionPane.showInternalMessageDialog(Desktop.Escritorio, "Acceso negado");
        }
    }

    private void CallLogin() {
        this.dispose();
        //Clases.Main.main(null);
    }

    private void CallExit() {
        if (JOptionPane.showConfirmDialog(rootPane,"¿Esta seguro que desea salir?","Exit",0)==0)
        {
            System.exit(1);
        }
    }

    private void CallFacturas() 
    {
        JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Modulo aun no programado");
    }

    private void CallConsultas() 
    {
        if (NivelDeUsuario.equalsIgnoreCase("vendedor"))
        {
            JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Acceso negado");
        }else
        {
            Resumen Reports = new Resumen ();
            Desktop.Escritorio.add(Reports);
            Reports.setLocation(Desktop.Escritorio.getWidth() / 2 - Reports.getWidth() / 2,Desktop.Escritorio.getHeight() / 2 - Reports.getHeight() / 2);
            Reports.toFront();
            Reports.show();
        }
    }

    private void CallInventario() 
    {
        if (NivelDeUsuario.equalsIgnoreCase("vendedor"))
        {
            JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Acceso negado");
        }else
        {
            Inventario Reports = new Inventario ();
            Desktop.Escritorio.add(Reports);
            Reports.setLocation(Desktop.Escritorio.getWidth() / 2 - Reports.getWidth() / 2,Desktop.Escritorio.getHeight() / 2 - Reports.getHeight() / 2);
            Reports.toFront();
            Reports.show();
        }
    }
    
    private void CallStoreOrder() 
    {
        if (NivelDeUsuario.equalsIgnoreCase("root"))
        {
            StoreOrder StoreOrder = new StoreOrder ();
            Desktop.Escritorio.add(StoreOrder);
            StoreOrder.setLocation(Desktop.Escritorio.getWidth() / 2 - StoreOrder.getWidth() / 2,Desktop.Escritorio.getHeight() / 2 - StoreOrder.getHeight() / 2);
            StoreOrder.show();
        }else
        {
            JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Acceso denegado");
        }
    }
    
    private void CallConfig() 
    {
        if (NivelDeUsuario.equalsIgnoreCase("root"))
        {
            Config Config = new Config ();
            Desktop.Escritorio.add(Config);
            Config.setLocation(Desktop.Escritorio.getWidth() / 2 - Config.getWidth() / 2,Desktop.Escritorio.getHeight() / 2 - Config.getHeight() / 2);
            Config.show();
        }else
        {
            JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Acceso denegado");
        }
    }

    private void AdminStaff() {
        if (NivelDeUsuario.equalsIgnoreCase("vendedor"))
        {
            JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Acceso negado");
        }else
        {
            Staff Reports = new Staff(NivelDeUsuario, UsuarioDeTrabajador);
            Desktop.Escritorio.add(Reports);
            Reports.setLocation(Desktop.Escritorio.getWidth() / 2 - Reports.getWidth() / 2,Desktop.Escritorio.getHeight() / 2 - Reports.getHeight() / 2);
            Reports.toFront();
            Reports.show();
        }
    }

    private void AddIngreso() {
        
        String Monto = JOptionPane.showInternalInputDialog(Desktop.Escritorio,"Ingrese un monto para INGRESO.");
        
        
        if (isNumeric(Monto) == true)
        {   
            String Descripcion = JOptionPane.showInternalInputDialog(Desktop.Escritorio,"Ingrese una descripcion.");
        
            Descripcion = "INGRESO - " + Descripcion;
        
            try {

                Clases.ConexionBD coneccion = new Clases.ConexionBD();

                String addlog = "INSERT INTO `logs`(`producto`,`codigo`, `precio`, `piezas`, `hora` , `fecha`) VALUES ('"+ Descripcion.toUpperCase() +"','S/N','"+Monto.replace(",", ".").replace(" ", "")+"',"
                            + "'"+"1"+"','"+Hora()+"','"+fecha()+"')";
                coneccion.ejecutar(addlog);
                JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Monto agregado con exito.");
                
            } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
                JOptionPane.showInternalMessageDialog(Desktop.Escritorio,ex);
            }
        }else
        {
            JOptionPane.showInternalMessageDialog(Desktop.Escritorio, "Ingrese un numero valido");
        }
    }
    
    private static boolean isNumeric (String cadena){
	cadena = cadena.replace(",", ".").replace(" ", "");
        try {
		Float.parseFloat(cadena);
		return true;
	} catch (NumberFormatException nfe){
		return false;
	}
    }
    
    private String fecha()
    {
        Calendar fecha = new GregorianCalendar ();
        int a = fecha.get(Calendar.MONTH);
        int b = a+1;
        
        String dia = Integer.toString(fecha.get(Calendar.DATE));
        String mes = Integer.toString(b);
        String año = Integer.toString(fecha.get(Calendar.YEAR));
        
        return año + "-" +mes +"-"+ dia;
    }
    
    private String Hora ()
    {
        Calendar fecha = new GregorianCalendar ();
        
        String hora = Integer.toString(fecha.get(Calendar.HOUR));
        String minutos = Integer.toString(fecha.get(Calendar.MINUTE));
        String segundos = Integer.toString(fecha.get(Calendar.SECOND));
        
       return hora + ":" + minutos + ":" + segundos; 
    }

    private void AddEgreso() {
        String Monto =JOptionPane.showInternalInputDialog(Desktop.Escritorio,"Ingrese un monto para EGRESO.");
        
        
        if (isNumeric(Monto) == true)
        {
            String Descripcion = JOptionPane.showInternalInputDialog(Desktop.Escritorio,"Ingrese una descripcion.");
        
            Descripcion = "EGRESO - " + Descripcion;
            Monto = "-" + Monto;
            
            try {

                Clases.ConexionBD coneccion = new Clases.ConexionBD();

                String addlog = "INSERT INTO `logs`(`producto`,`codigo`, `precio`, `piezas`, `hora` , `fecha`) VALUES ('"+ Descripcion.toUpperCase() +"','S/N','"+Monto.replace(",", ".").replace(" ", "")+"',"
                            + "'"+"1"+"','"+Hora()+"','"+fecha()+"')";
                coneccion.ejecutar(addlog);
                JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Monto Egresado con exito.");
                
            } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
                JOptionPane.showInternalMessageDialog(Desktop.Escritorio,ex);
            }
        }else
        {
            JOptionPane.showInternalMessageDialog(Desktop.Escritorio, "Ingrese un numero valido");
        }
    }

    private void CallClients() {
        Clientes clientes = new Clientes();
        Desktop.Escritorio.add(clientes);
        clientes.NivelDeUsuario = NivelDeUsuario;
        clientes.setLocation(Desktop.Escritorio.getWidth() / 2 - clientes.getWidth() / 2,Desktop.Escritorio.getHeight() / 2 - clientes.getHeight() / 2);
        clientes.toFront();
        clientes.show();
    }

    private void CallCredit() 
    {
        creditos jform = new creditos();
        Desktop.Escritorio.add(jform);
        jform.setLocation(Desktop.Escritorio.getWidth() / 2 - jform.getWidth() / 2,Desktop.Escritorio.getHeight() / 2 - jform.getHeight() / 2);
        jform.toFront();
        jform.show();
    }

    public void DeveloperInfo() {
        JOptionPane.showMessageDialog(Desktop.Escritorio, "CLTA DESARROLLO & DISTRIBUCION DE SOFTWARE\n\nLicencia para: "+datos.ReturnDateMay("nombre")+"\n\nV. "+datos.ReturnDateMay("version")+" | "+datos.ReturnDateMay("web")+"");
    }

    private void VaciarTableN(String tabla) {
        if (NivelDeUsuario.equalsIgnoreCase("root"))
        {
            if (JOptionPane.showInternalConfirmDialog(Desktop.Escritorio,"Todo el contenido de: "+tabla+" sera eliminado sin manera de recuperarse.","¿ALERTA!", 0) == 0)
        {
            try {
                Clases.ConexionBD coneccion = new Clases.ConexionBD();
                String sql = "truncate "+tabla+" ";
                coneccion.ejecutar(sql);
                JOptionPane.showInternalMessageDialog(Desktop.Escritorio,tabla.toUpperCase() + ": ha sido vaciada correctamente.".toUpperCase());
            } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
                JOptionPane.showMessageDialog(Desktop.Escritorio, ex);
            }
        }
        }else
        {
            JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Acceso denegado");
        }
        
    }
    private void VaciarTables() {
        
        if (NivelDeUsuario.equalsIgnoreCase("root"))
        {
            
            if (JOptionPane.showInternalConfirmDialog(Desktop.Escritorio,"Todo el contenido del sistema sera eliminado sin manera de recuperarse.","¿ALERTA!", 0) == 0)
            {
                try {
                    Clases.ConexionBD coneccion = new Clases.ConexionBD();
                    String sql = "TRUNCATE clientes; TRUNCATE creditos; TRUNCATE logs; TRUNCATE productos; TRUNCATE provedores;";
                    coneccion.ejecutar(sql);
                    JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"El sistema ah sido vaciado por completo.".toUpperCase());
                } catch (ClassNotFoundException | SQLException | InstantiationException | IllegalAccessException ex) {
                    JOptionPane.showMessageDialog(Desktop.Escritorio, ex);
                }
            }
            
        }else
        {
            JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Acceso denegado");
        }
        
    }

    private void CallFamylys() {
        if (NivelDeUsuario.equalsIgnoreCase("vendedor"))
        {
            JOptionPane.showInternalMessageDialog(Desktop.Escritorio,"Acceso negado");
        }else
        {
            familys jform = new familys();
            Desktop.Escritorio.add(jform);
            jform.setLocation(Desktop.Escritorio.getWidth() / 2 - jform.getWidth() / 2,Desktop.Escritorio.getHeight() / 2 - jform.getHeight() / 2);
            jform.toFront();
            jform.show();
        }
    }
    
    private void TotalRecaudado( JTable Tabla) 
    {
        footer = "";
        footer_familias = "\n";
        
        ArrayList lista = new ArrayList();
        
        Double total = 0.0;
        
        int efectivo = 0;
        Double efeDouble = 0.0;
        
        int tarjeta = 0;
        Double tarDouble = 0.0;
        
        int cheque = 0;
        Double cheDouble = 0.0;
        
        int vale = 0;
        Double valDouble = 0.0;
        
        int otro = 0;
        Double otrDouble = 0.0;
        
        for (int i = 0 ; i < Tabla.getRowCount(); i++)
        {
            boolean exist = false;
            
            String Familia = (String) Tabla.getValueAt(i, 7);
            
            for (Object item: lista) 
            {
                if (item.equals(Familia))
                {
                    exist = true;
                    break;
                }
            }
            
            if (!exist)
            {
                lista.add(Familia);
            }
        }
        
        
        for (int i = 0 ; i < Tabla.getRowCount(); i++)
        {
           Double tmp = Double.parseDouble((String) Tabla.getValueAt(i, 5)); 
           total += tmp;
           
           // Metodos de pago
           if (String.valueOf(Tabla.getValueAt(i, 8)).equalsIgnoreCase("efectivo"))
           {
               efectivo ++;
               efeDouble += Double.parseDouble((String) Tabla.getValueAt(i, 5));
           }
           
           if (String.valueOf(Tabla.getValueAt(i, 8)).equalsIgnoreCase("tarjeta"))
           {
               tarjeta ++;
               tarDouble += Double.parseDouble((String) Tabla.getValueAt(i, 5));
           }
           
           if (String.valueOf(Tabla.getValueAt(i, 8)).equalsIgnoreCase("cheque"))
           {
               cheque ++;
               cheDouble += Double.parseDouble((String) Tabla.getValueAt(i, 5));
           }
           
           if (String.valueOf(Tabla.getValueAt(i, 8)).equalsIgnoreCase("vale"))
           {
               vale ++;
               valDouble += Double.parseDouble((String) Tabla.getValueAt(i, 5));
           }
           
           if (String.valueOf(Tabla.getValueAt(i, 8)).equalsIgnoreCase("otro"))
           {
               otro ++;
               otrDouble += Double.parseDouble((String) Tabla.getValueAt(i, 5));
           }
        }
        
        if (efectivo > 0)
        {
            footer += "(" + efectivo + ") Efectivo: $ " + efeDouble;
        }
        
        if (tarjeta > 0)
        {
            footer += "\n(" + tarjeta + ") Tarjeta: $ " + tarDouble;
        }
        
        if (cheque > 0)
        {
            footer += "\n(" + cheque + ") Cheque: $ " + cheDouble;
        }
        
        if (vale > 0)
        {
            footer += "\n(" + vale + ") Vale: $ " + valDouble;
        }
        
        if (otro > 0)
        {
            footer += "\n(" + otro + ") Otro: $ " + otrDouble;
        }
        
        
        footer += "\n\nTotal recaudado: $ " + total;
        
        // Familias
        double totalfamily = 0.0;
        
        for (Object item: lista) 
        {
            int cont = 0;
            Double tmp = 0.0;
            
            for (int i = 0 ; i < Tabla.getRowCount(); i++)
            {
                if (Tabla.getValueAt(i, 7).equals(item))
                {
                    cont ++;
                    
                    double r = Double.parseDouble((String) Tabla.getValueAt(i, 5));
                    
                    tmp += r; 
                    totalfamily += r;
                }
            }
            footer_familias += "("+cont + ") " + f.First_Upercase(item.toString()) + " $ " +tmp + "\n";
        }
        footer_familias += "\nTotal recaudado $ " + totalfamily;
    }
}
